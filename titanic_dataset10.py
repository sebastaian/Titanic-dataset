# -*- coding: utf-8 -*-
"""TITANIC DATASET10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1msct3Zfg2L4jhWV1cgWBCPOC58-ZKPg2

IMPORTING THE DEPENDENCIES
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""DATA COLLECTION AND PREPROCESSING

1.Import the dataset and explore basic info (nulls, data types).
"""

# importing the dataset into a pandas dataframe
titanic_data = pd.read_csv('/content/Titanic-Dataset.csv')

# number of rows and columns in a dataset
print('number of rows and columns in a dataset:')

titanic_data.shape

# first 5 rows in a dataset
print('first 5 rows in a dataset:')
titanic_data.head()

# data types in a dataset
print('data types in a dataset:')
titanic_data.info()

# find missing values in a datset
print('find missing values in a datset:')
titanic_data.isnull().sum()

"""HANDLING MISSING VALUES

2.Handle missing values using mean/median/imputation.
"""

# fill missing age values with the mean
titanic_data['Age'] = titanic_data['Age'].fillna(titanic_data['Age'].mean())

# fill missing embarked vales with the mode
titanic_data['Embarked'] = titanic_data['Embarked'].fillna(titanic_data['Embarked'].mode()[0])

# drop the cabin column due to a large number of missing values
titanic_data.drop('Cabin', axis=1, inplace=True)

# find missing values in a dataset
print('find missing values in a datset:')
titanic_data.isnull().sum()

"""ENCODE CATEGORICAL FEATURES

3.Convert categorical features into numerical using encoding.
"""

# display the first 5 rows of a dataset after updating
print('display the first 5 rows of a dataset after updating:')
titanic_data.head()

"""NORMALIZE NUMERICAL FEATURES

4.Normalize/standardize the numerical features.
"""

from sklearn.preprocessing import StandardScaler

# Select numerical columns to normalize (excluding PassengerId and Survived)
numerical_columns = ['PassengerId', 'Survived', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare']

# Initialize the StandardScaler
Scalar = StandardScaler()

# Apply standardization to the numerical columns
titanic_data[numerical_columns] = Scalar.fit_transform(titanic_data[numerical_columns])

# Display the first few rows of the updated DataFrame to see the scaled features

print('dataframe after standardization:')
titanic_data.head()

"""VISUALIZE AND HANDLE OUTLIERS

5.Visualize outliers using boxplots and remove them.
"""

# Select numerical columns for visualizing outliers (excluding PassengerId and Survived)

numerical_cols_for_outliers = ['Pclass', 'Age', 'SibSp', 'Parch', 'Fare']

# Create boxplots for each numerical column to visualize outliers
plt.figure(figsize=(12, 6))
for i, col in enumerate(numerical_cols_for_outliers, 1):
    plt.subplot(2, 3, i)
    sns.boxplot(x=titanic_data[col])
    plt.title(f'Boxplot of {col}')
plt.tight_layout()
plt.show()